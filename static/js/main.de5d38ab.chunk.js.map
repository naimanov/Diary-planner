{"version":3,"sources":["components/Navbar/Logo/Logo.js","constants/constants.js","components/Navbar/NavButtons/TodayButton.js","Firebase/firebase.js","components/Navbar/NavButtons/LogOutButton.js","components/Navbar/NavButtons/CalendarButton.js","components/Navbar/Navbar.js","components/Calendar/CalendarHeader/CalendarHeader.js","components/Calendar/CalendarDayNames/CalendarDayNames.js","helpers/dateToString.js","components/Calendar/CalendarDays/CalendarSingleDay.js","components/Calendar/CalendarDays/CalendarDays.js","components/Calendar/Calendar.js","helpers/getMonthName.js","helpers/getCalendar.js","components/Tasks/TasksDate/DateButtons.js","components/Tasks/TasksDate/TasksDate.js","helpers/getMonthNameTasks.js","Firebase/db.js","components/Tasks/TasksButtons/TasksButtons.js","components/Tasks/TasksList/SingleTask/SingleTaskButtons.js","components/Tasks/TasksList/SingleTask/Checkbox.js","components/Tasks/TasksList/SingleTask/SingleTask.js","components/Loader/Loader.js","components/Tasks/TasksList/TasksList.js","components/Tasks/Tasks.js","pages/MainPage/MainPage.js","components/Modal/TaskModal.js","components/Forms/Form.js","components/Forms/FormError.js","components/Forms/SignInForm.js","pages/Authorization/Authorization.js","components/Forms/RegistrationForm.js","pages/Authorization/Registration.js","components/Error/Error.js","pages/Error404/Error404.js","pages/ErrorPage/ErrorPage.js","App.js","reportWebVitals.js","reducers/dateReducer.js","reducers/tasksReducer.js","reducers/calendarReducer.js","store/store.js","index.js"],"names":["Logo","className","SET_SELECTED_DATE","SET_NEXT_DATE","SET_PREV_DATE","GET_TASKS","ADD_TASK","EDIT_TASK","OPEN_MODAL","CLOSE_MODAL","SAVE_EDITED_TASK","SET_CURRENT_DATE","GET_USER_ID","GET_CALENDAR_DAYS","GET_PREV_MONTH","GET_NEXT_MONTH","SET_CALENDAR_DATE","TOGGLE_CALENDAR_SHOW","TodayButton","dispatch","useDispatch","onClick","type","payload","Date","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","LoginButton","history","useHistory","signOut","push","CalendarButton","showCalendar","useSelector","state","calendarReducer","Navbar","LogOutButton","CalendarHeader","monthName","year","CalendarDayNames","map","dayName","dateToString","date","getFullYear","getMonth","getDate","CalendarDay","day","selectedDate","currentDate","month","dateNumber","isSelected","isCurrent","classes","data-date","CalendarDays","dateReducer","calendarDays","e","target","dataset","window","getSelection","toString","handleCalendarDate","CalendarSingleDay","Calendar","isLoading","calendarDate","0","1","2","3","4","5","6","7","8","9","10","11","useEffect","i","getDay","prevDate","setDate","String","length","nextDate","getCalendar","DateButtons","TasksDate","monthNumber","toLowerCase","getDocRef","userId","collection","doc","getTaskRef","docId","addTask","text","a","add","done","createdAt","now","TasksButtons","tasksReducer","clearAll","get","then","querySnapshot","forEach","ref","delete","clearAllTasks","err","console","log","SingleTaskButtons","id","removeTask","deleteTask","editTask","Checkbox","toggleCheckBox","update","toogleTaskCheckBox","Task","Loading","Tasks","tasks","unsubscribe","onSnapshot","obj","data","task","sort","b","SingleTask","Loader","TasksList","MainPage","onAuthStateChanged","user","uid","TaskModal","useState","taskText","setTaskText","isEdit","editingTask","isCreateTaskOpen","closeModal","document","getElementById","focus","save","newText","saveEditedTask","onSubmit","preventDefault","onKeyDown","key","onKeyDownHandler","placeholder","value","onChange","Form","formAction","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailFocus","setEmailFocus","passwordFocus","setPasswordFocus","emailError","setEmailError","passwordError","setPasswordError","showPassword","setShowPassword","remember","setRemember","formValid","setFormValid","blurHandler","name","handleSubmit","htmlFor","test","emailHandler","onBlur","onFocus","passwordHandler","checked","disabled","FormError","errorText","setIsError","SignInForm","isError","setErrorText","signIn","setPersistence","Auth","Persistence","SESSION","signInWithEmailAndPassword","code","to","Authorization","RegistrationForm","registration","createUserWithEmailAndPassword","Registration","Error404","Error","errorPage","App","exact","path","ErrorPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","rootReducer","combineReducers","action","find","item","prevMonthDate","setMonth","nextMonthDate","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.de5d38ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BsCalendar } from 'react-icons/bs';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className='logo'>\r\n      <BsCalendar className='logo-image' />\r\n      <h1>Ежедневник</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","export const SET_SELECTED_DATE = 'SET_SELECTED_DATE';\r\nexport const SET_NEXT_DATE = 'SET_NEXT_DATE';\r\nexport const SET_PREV_DATE = 'SET_PREV_DATE';\r\nexport const GET_TASKS = 'GET_TASKS';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\nexport const SAVE_EDITED_TASK = 'SAVE_EDITED_TASK';\r\nexport const SET_CURRENT_DATE = 'SET_CURRENT_DATE';\r\nexport const GET_USER_ID = 'GET_USER_ID';\r\nexport const GET_CALENDAR_DAYS = 'GET_CALENDAR_DAYS';\r\nexport const GET_PREV_MONTH = 'GET_PREV_MONTH';\r\nexport const GET_NEXT_MONTH = 'GET_NEXT_MONTH';\r\nexport const SET_CALENDAR_DATE = 'SET_CALENDAR_DATE';\r\nexport const TOGGLE_CALENDAR_SHOW = 'TOGGLE_CALENDAR_SHOW';\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  SET_CURRENT_DATE,\r\n  SET_CALENDAR_DATE,\r\n} from '../../../constants/constants';\r\n\r\nfunction TodayButton() {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectTodayDate = () => {\r\n    dispatch({ type: SET_CURRENT_DATE });\r\n    dispatch({ type: SET_CALENDAR_DATE, payload: new Date() });\r\n  };\r\n\r\n  return (\r\n    <button className='today-button' onClick={selectTodayDate}>\r\n      Сегодня\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default TodayButton;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCeN10aPvv0mnclLMVHjHLRb8lF9QJTHuI',\r\n  authDomain: 'diary-planner-cb13b.firebaseapp.com',\r\n  projectId: 'diary-planner-cb13b',\r\n  storageBucket: 'diary-planner-cb13b.appspot.com',\r\n  messagingSenderId: '656037197569',\r\n  appId: '1:656037197569:web:853c0b326a285c98b5cd00',\r\n  measurementId: 'G-EXD8H4TYQ5',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n","import React from 'react';\r\nimport { auth } from '../../../Firebase/firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BiLogOut } from 'react-icons/bi';\r\n\r\nfunction LoginButton() {\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    auth.signOut();\r\n    history.push('#/auth');\r\n  };\r\n\r\n  return (\r\n    <button className='logout-button' onClick={logout}>\r\n      <BiLogOut />\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LoginButton;\r\n","import React from 'react';\r\nimport { BsCalendar } from 'react-icons/bs';\r\nimport { FaCaretDown } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TOGGLE_CALENDAR_SHOW } from '../../../constants/constants';\r\n\r\nfunction CalendarButton() {\r\n  const dispatch = useDispatch();\r\n  const showCalendar = useSelector(\r\n    (state) => state.calendarReducer.showCalendar\r\n  );\r\n\r\n  const toggleCalendarShow = () => {\r\n    dispatch({ type: TOGGLE_CALENDAR_SHOW });\r\n  };\r\n\r\n  return (\r\n    <button className='calendar-button' onClick={toggleCalendarShow}>\r\n      <BsCalendar />\r\n      <FaCaretDown\r\n        className={`\r\n      ${showCalendar ? 'calendar-open' : 'calendar-close'}`}\r\n      />\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CalendarButton;\r\n","import React from 'react';\r\nimport Logo from './Logo/Logo';\r\nimport TodayButton from './NavButtons/TodayButton';\r\nimport LogOutButton from './NavButtons/LogOutButton';\r\nimport CalendarButton from './NavButtons/CalendarButton';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <header className='navbar'>\r\n      <Logo />\r\n      <div className='nav-buttons'>\r\n        <CalendarButton />\r\n        <TodayButton />\r\n        <LogOutButton />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { FaChevronLeft } from 'react-icons/fa';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { GET_PREV_MONTH, GET_NEXT_MONTH } from '../../../constants/constants';\r\n\r\nfunction CalendarHeader({ monthName, year }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const prevMonth = () => {\r\n    dispatch({ type: GET_PREV_MONTH });\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    dispatch({ type: GET_NEXT_MONTH });\r\n  };\r\n\r\n  return (\r\n    <div className='calendar-title-container'>\r\n      <h3>\r\n        {monthName} {year}\r\n      </h3>\r\n      <div>\r\n        <button className='date-button' onClick={() => prevMonth()}>\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button className='date-button' onClick={() => nextMonth()}>\r\n          <FaChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarHeader;\r\n","import React from 'react';\r\n\r\nfunction CalendarDayNames() {\r\n  const dayNames = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];\r\n\r\n  return (\r\n    <div className='day-names-container'>\r\n      {dayNames.map((dayName) => {\r\n        return (\r\n          <div key={dayName} className='calendar-day calendar-day-names'>\r\n            {dayName}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarDayNames;\r\n","export const dateToString = (date) => {\r\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n};\r\n","import React from 'react';\r\nimport { dateToString } from '../../../helpers/dateToString';\r\n\r\nfunction CalendarDay({ day, selectedDate, currentDate }) {\r\n  const { date, month, dateNumber } = day;\r\n  const isSelected = dateToString(selectedDate) === dateToString(date);\r\n  const isCurrent = dateToString(date) === dateToString(currentDate);\r\n\r\n  const classes = `calendar-day ${\r\n    month === 'currentMonth' ? 'current-month-day' : null\r\n  } ${isCurrent ? 'calendar-day-current' : null} ${\r\n    isSelected ? 'calendar-day-selected' : null\r\n  }`;\r\n\r\n  return (\r\n    <div data-date={date} className={classes}>\r\n      {dateNumber}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarDay;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SET_SELECTED_DATE } from '../../../constants/constants';\r\nimport CalendarSingleDay from './CalendarSingleDay';\r\n\r\nfunction CalendarDays() {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedDate = useSelector((state) => state.dateReducer.selectedDate);\r\n  const calendarDays = useSelector(\r\n    (state) => state.calendarReducer.calendarDays\r\n  );\r\n  const currentDate = new Date();\r\n\r\n  const handleCalendarDate = (e) => {\r\n    const date = new Date(e.target.dataset.date);\r\n    if (!window.getSelection().toString()) {\r\n      dispatch({ type: SET_SELECTED_DATE, payload: date });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='calendar-days-conteiner'\r\n      onClick={(e) => handleCalendarDate(e)}\r\n    >\r\n      {calendarDays.map((day) => {\r\n        return (\r\n          <CalendarSingleDay\r\n            key={day.date + day.month}\r\n            day={day}\r\n            selectedDate={selectedDate}\r\n            currentDate={currentDate}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarDays;\r\n","import React, { useEffect } from 'react';\r\nimport { getMonthName } from '../../helpers/getMonthName';\r\nimport { getCalendar } from '../../helpers/getCalendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GET_CALENDAR_DAYS } from '../../constants/constants';\r\nimport CalendarHeader from './CalendarHeader/CalendarHeader';\r\nimport CalendarDayNames from './CalendarDayNames/CalendarDayNames';\r\nimport CalendarDays from './CalendarDays/CalendarDays';\r\n\r\nfunction Calendar() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.calendarReducer.isLoading);\r\n  const showCalendar = useSelector(\r\n    (state) => state.calendarReducer.showCalendar\r\n  );\r\n  const calendarDate = useSelector(\r\n    (state) => state.calendarReducer.calendarDate\r\n  );\r\n\r\n  const month = calendarDate.getMonth();\r\n  const year = calendarDate.getFullYear();\r\n  const monthName = getMonthName(month);\r\n\r\n  useEffect(() => {\r\n    const calendarDays = getCalendar(year, month);\r\n    dispatch({ type: GET_CALENDAR_DAYS, payload: calendarDays });\r\n  }, [calendarDate]);\r\n\r\n  if (isLoading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <article\r\n      className={`${showCalendar ? 'calendar show-calendar' : 'calendar'}`}\r\n    >\r\n      <CalendarHeader monthName={monthName} year={year} />\r\n      <CalendarDayNames />\r\n      <CalendarDays />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","export const getMonthName = (monthNumber) => {\r\n  const months = {\r\n    0: 'Январь',\r\n    1: 'Февраль',\r\n    2: 'Март',\r\n    3: 'Апрель',\r\n    4: 'Май',\r\n    5: 'Июнь',\r\n    6: 'Июль',\r\n    7: 'Август',\r\n    8: 'Сентябрь',\r\n    9: 'Октярь',\r\n    10: 'Ноябрь',\r\n    11: 'Декабрь',\r\n  };\r\n\r\n  return months[monthNumber];\r\n};\r\n","export const getCalendar = (year, month) => {\r\n  const date = new Date(year, month);\r\n  const calendarDays = [];\r\n\r\n  for (let i = date.getDay() - 1; i > 0; i--) {\r\n    const prevDate = new Date(year, month);\r\n    prevDate.setDate(prevDate.getDate() - i);\r\n    calendarDays.push({\r\n      date: prevDate,\r\n      month: 'prevMonth',\r\n      dateNumber: prevDate.getDate(),\r\n    });\r\n  }\r\n\r\n  while (String(date.getMonth()) === String(month)) {\r\n    const currentDate = new Date(date);\r\n    calendarDays.push({\r\n      date: currentDate,\r\n      month: 'currentMonth',\r\n      dateNumber: currentDate.getDate(),\r\n    });\r\n    date.setDate(date.getDate() + 1);\r\n  }\r\n\r\n  while (calendarDays.length < 42) {\r\n    const nextDate = new Date(date);\r\n    calendarDays.push({\r\n      date: nextDate,\r\n      month: 'nextMonth',\r\n      dateNumber: nextDate.getDate(),\r\n    });\r\n    date.setDate(date.getDate() + 1);\r\n  }\r\n\r\n  return calendarDays;\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SET_NEXT_DATE, SET_PREV_DATE } from '../../../constants/constants';\r\nimport { FaChevronLeft } from 'react-icons/fa';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\n\r\nfunction DateButtons() {\r\n  const dispatch = useDispatch();\r\n\r\n  const prevDate = () => {\r\n    dispatch({ type: SET_PREV_DATE });\r\n  };\r\n\r\n  const nextDate = () => {\r\n    dispatch({ type: SET_NEXT_DATE });\r\n  };\r\n\r\n  return (\r\n    <div className='chevron-buttons-container'>\r\n      <button className='date-button' onClick={() => prevDate()}>\r\n        <FaChevronLeft />\r\n      </button>\r\n      <button className='date-button' onClick={() => nextDate()}>\r\n        <FaChevronRight />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateButtons;\r\n","import React from 'react';\r\nimport DateButtons from '../TasksDate/DateButtons';\r\nimport { getMonthNameTasks } from '../../../helpers/getMonthNameTasks';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction TasksDate() {\r\n  const selectedDate = useSelector((state) => state.dateReducer.selectedDate);\r\n\r\n  const day = selectedDate.getDate();\r\n  const month = getMonthNameTasks(selectedDate.getMonth()).toLowerCase();\r\n  const year = selectedDate.getFullYear();\r\n\r\n  return (\r\n    <section className='date'>\r\n      <DateButtons />\r\n      <div className='date-container'>\r\n        <h2 className='tasks-date'>\r\n          {day} {month} {year}\r\n        </h2>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TasksDate;\r\n","export const getMonthNameTasks = (monthNumber) => {\r\n  const months = {\r\n    0: 'Января',\r\n    1: 'Февраля',\r\n    2: 'Марта',\r\n    3: 'Апреля',\r\n    4: 'Мая',\r\n    5: 'Июня',\r\n    6: 'Июля',\r\n    7: 'Августа',\r\n    8: 'Сентября',\r\n    9: 'Октяря',\r\n    10: 'Ноября',\r\n    11: 'Декабря',\r\n  };\r\n\r\n  return months[monthNumber];\r\n};\r\n","import { db } from '../Firebase/firebase';\r\nimport { dateToString } from '../helpers/dateToString';\r\n\r\nconst getDocRef = (userId, selectedDate) => {\r\n  const docRef = db\r\n    .collection('users')\r\n    .doc(userId)\r\n    .collection(dateToString(selectedDate));\r\n  return docRef;\r\n};\r\n\r\nconst getTaskRef = (userId, selectedDate, docId) => {\r\n  const docRef = db\r\n    .collection('users')\r\n    .doc(userId)\r\n    .collection(dateToString(selectedDate))\r\n    .doc(docId);\r\n  return docRef;\r\n};\r\n\r\nexport const addTask = async (userId, selectedDate, text) => {\r\n  getDocRef(userId, selectedDate).add({\r\n    done: false,\r\n    text: text,\r\n    createdAt: Date.now(),\r\n  });\r\n};\r\n\r\nexport const saveEditedTask = (userId, selectedDate, docId, newText) => {\r\n  getTaskRef(userId, selectedDate, docId).update({ text: newText });\r\n};\r\n\r\nexport const deleteTask = (userId, selectedDate, docId) => {\r\n  getTaskRef(userId, selectedDate, docId).delete();\r\n};\r\n\r\nexport const toogleTaskCheckBox = (userId, selectedDate, docId, done) => {\r\n  getTaskRef(userId, selectedDate, docId).update({ done: !done });\r\n};\r\n\r\nexport const clearAllTasks = (userId, selectedDate) => {\r\n  const docRef = getDocRef(userId, selectedDate);\r\n  docRef.get().then((querySnapshot) => {\r\n    querySnapshot.forEach((doc) => {\r\n      doc.ref.delete();\r\n    });\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { OPEN_MODAL } from '../../../constants/constants';\r\nimport { clearAllTasks } from '../../../Firebase/db';\r\n\r\nfunction TasksButtons() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state) => state.dateReducer.selectedDate);\r\n  const userId = useSelector((state) => state.tasksReducer.userId);\r\n\r\n  const clearAll = () => {\r\n    try {\r\n      clearAllTasks(userId, selectedDate);\r\n    } catch (err) {\r\n      history.push('/error');\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    dispatch({ type: OPEN_MODAL });\r\n  };\r\n\r\n  return (\r\n    <section className='buttons-container'>\r\n      <button className='tasks-button' onClick={() => clearAll()}>\r\n        Очистить\r\n      </button>\r\n      <button className='tasks-button' onClick={() => openModal()}>\r\n        Создать\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TasksButtons;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EDIT_TASK } from '../../../../constants/constants';\r\nimport { deleteTask } from '../../../../Firebase/db';\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SingleTaskButtons({ id }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state) => state.dateReducer.selectedDate);\r\n  const userId = useSelector((state) => state.tasksReducer.userId);\r\n\r\n  const removeTask = (id) => {\r\n    try {\r\n      deleteTask(userId, selectedDate, id);\r\n    } catch (err) {\r\n      history.push('#/error');\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const editTask = (id) => {\r\n    dispatch({ type: EDIT_TASK, payload: id });\r\n  };\r\n\r\n  return (\r\n    <div className='buttons-container'>\r\n      <button className='edit-button' onClick={() => editTask(id)}>\r\n        <FaEdit />\r\n      </button>\r\n      <button className='delete-button' onClick={() => removeTask(id)}>\r\n        <FaTrashAlt />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleTaskButtons;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { toogleTaskCheckBox } from '../../../../Firebase/db';\r\n\r\nimport { FaCheck } from 'react-icons/fa';\r\n\r\nfunction Checkbox({ done, id }) {\r\n  const history = useHistory();\r\n  const selectedDate = useSelector((state) => state.dateReducer.selectedDate);\r\n  const userId = useSelector((state) => state.tasksReducer.userId);\r\n\r\n  const toggleCheckBox = (id) => {\r\n    try {\r\n      toogleTaskCheckBox(userId, selectedDate, id, done);\r\n    } catch (err) {\r\n      history.push('#/error');\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='check-box ' onClick={() => toggleCheckBox(id)}>\r\n      <FaCheck\r\n        className={`${done ? 'check-mark check-mark-done' : 'check-mark'}`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport SingleTaskButtons from './SingleTaskButtons';\r\nimport Checkbox from './Checkbox';\r\n\r\nfunction Task({ text, done, id }) {\r\n  return (\r\n    <article className='task-container'>\r\n      <div className='task'>\r\n        <Checkbox done={done} id={id} />\r\n        <p>{text}</p>\r\n      </div>\r\n      <SingleTaskButtons id={id} />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React from 'react';\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className='loading-container'>\r\n      <div className='loading'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useEffect } from 'react';\r\nimport SingleTask from './SingleTask/SingleTask';\r\nimport Loader from '../../Loader/Loader';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GET_TASKS } from '../../../constants/constants';\r\nimport { db } from '../../../Firebase/firebase';\r\nimport { dateToString } from '../../../helpers/dateToString';\r\n\r\nfunction Tasks() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state) => state.dateReducer.selectedDate);\r\n  const tasks = useSelector((state) => state.tasksReducer.tasks);\r\n  const userId = useSelector((state) => state.tasksReducer.userId);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let unsubscribe;\r\n      if (userId) {\r\n        unsubscribe = db\r\n          .collection('users')\r\n          .doc(userId)\r\n          .collection(dateToString(selectedDate))\r\n          .onSnapshot((querySnapshot) => {\r\n            const tasks = [];\r\n            querySnapshot.forEach((doc) => {\r\n              const obj = doc.data();\r\n              const task = {\r\n                id: doc.id,\r\n                done: obj.done,\r\n                text: obj.text,\r\n                createdAt: obj.createdAt,\r\n              };\r\n              tasks.push(task);\r\n              tasks.sort((a, b) => a.createdAt - b.createdAt);\r\n            });\r\n            dispatch({ type: GET_TASKS, payload: tasks });\r\n          });\r\n      }\r\n      return unsubscribe;\r\n    } catch (err) {\r\n      history.push('error');\r\n      console.log(err);\r\n    }\r\n  }, [selectedDate, userId]);\r\n\r\n  if (!tasks) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <section className='tasks-list'>\r\n      {tasks.map((task) => {\r\n        return (\r\n          <SingleTask\r\n            key={task.id}\r\n            text={task.text}\r\n            done={task.done}\r\n            id={task.id}\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React from 'react';\r\nimport TaskDate from './TasksDate/TasksDate';\r\nimport TasksButtons from './TasksButtons/TasksButtons';\r\nimport TasksList from './TasksList/TasksList';\r\n\r\nfunction Tasks() {\r\n  return (\r\n    <article className='day-tasks'>\r\n      <div>\r\n        <TaskDate />\r\n        <TasksList />\r\n      </div>\r\n      <TasksButtons />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { useEffect } from 'react';\r\nimport Calendar from '../../components/Calendar/Calendar';\r\nimport Tasks from '../../components/Tasks/Tasks';\r\nimport { auth } from '../../Firebase/firebase';\r\nimport { GET_USER_ID } from '../../constants/constants';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction MainPage() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unsibscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch({ type: GET_USER_ID, payload: user.uid });\r\n      } else {\r\n        history.push('#/auth');\r\n      }\r\n    });\r\n    return unsibscribe;\r\n  }, []);\r\n\r\n  return (\r\n    <main className='main-layout'>\r\n      <Calendar />\r\n      <Tasks />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { addTask, saveEditedTask } from '../../Firebase/db';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  CLOSE_MODAL,\r\n  ADD_TASK,\r\n  SAVE_EDITED_TASK,\r\n} from '../../constants/constants';\r\n\r\nfunction TaskModal() {\r\n  const history = useHistory();\r\n  const [taskText, setTaskText] = useState('');\r\n\r\n  const isEdit = useSelector((state) => state.tasksReducer.isEdit);\r\n  const editingTask = useSelector((state) => state.tasksReducer.editingTask);\r\n  const selectedDate = useSelector((state) => state.dateReducer.selectedDate);\r\n  const userId = useSelector((state) => state.tasksReducer.userId);\r\n  const isCreateTaskOpen = useSelector(\r\n    (state) => state.tasksReducer.isCreateTaskOpen\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = () => {\r\n    dispatch({ type: CLOSE_MODAL });\r\n    setTaskText('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isCreateTaskOpen) {\r\n      document.getElementById('modal-input').focus();\r\n    }\r\n  }, [isCreateTaskOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setTaskText(editingTask.text);\r\n    }\r\n  }, [editingTask, isEdit]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const save = () => {\r\n    try {\r\n      if (isEdit) {\r\n        saveEditedTask(userId, selectedDate, editingTask.id, taskText);\r\n        dispatch({ type: SAVE_EDITED_TASK });\r\n        setTaskText('');\r\n      } else {\r\n        addTask(userId, selectedDate, taskText);\r\n        dispatch({ type: ADD_TASK });\r\n        setTaskText('');\r\n      }\r\n    } catch (err) {\r\n      history.push('#/error');\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onKeyDownHandler = (e) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        save(taskText);\r\n        break;\r\n      case 'Escape':\r\n        closeModal();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className='modal-wrapper'>\r\n      <div\r\n        className={`${isCreateTaskOpen ? 'overlay overlay-open' : 'overlay'}`}\r\n        onClick={() => closeModal()}\r\n      ></div>\r\n      <div className='modal-wrapper'></div>\r\n      <div className={`${isCreateTaskOpen ? 'modal modal-open' : 'modal'}`}>\r\n        <form\r\n          className='create-task'\r\n          onSubmit={handleSubmit}\r\n          onKeyDown={(e) => onKeyDownHandler(e)}\r\n        >\r\n          <input\r\n            id='modal-input'\r\n            className='modal-input'\r\n            placeholder='Внесите заметку'\r\n            value={taskText}\r\n            onChange={(e) => setTaskText(e.target.value)}\r\n          />\r\n          <div className='buttons-container'>\r\n            <button className='modal-button' onClick={() => closeModal()}>\r\n              Отмена\r\n            </button>\r\n            <button className='modal-button' onClick={() => save(taskText)}>\r\n              Сохранить\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default TaskModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FaEyeSlash, FaEye, FaCheck } from 'react-icons/fa';\r\n\r\nfunction Form({ text, formAction }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailDirty, setEmailDirty] = useState(false);\r\n  const [passwordDirty, setPasswordDirty] = useState(false);\r\n  const [emailFocus, setEmailFocus] = useState(false);\r\n  const [passwordFocus, setPasswordFocus] = useState(false);\r\n  const [emailError, setEmailError] = useState('Некорректный email');\r\n  const [passwordError, setPasswordError] = useState(\r\n    'Длина пароля должна быть не менее 6 символов'\r\n  );\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [remember, setRemember] = useState(false);\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (passwordError || emailError) {\r\n      setFormValid(false);\r\n    } else {\r\n      setFormValid(true);\r\n    }\r\n  }, [passwordError, emailError]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const emailHandler = (e) => {\r\n    setEmail(e.target.value);\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!re.test(String(e.target.value).toLowerCase())) {\r\n      setEmailError('Некорректный email');\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n  };\r\n\r\n  const passwordHandler = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value.length < 6) {\r\n      setPasswordError('Длина пароля должна быть не менее 6 символов');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const blurHandler = (e) => {\r\n    switch (e.target.name) {\r\n      case 'email':\r\n        setEmailDirty(true);\r\n        e.target.value < 1 && setEmailFocus(false);\r\n        break;\r\n      case 'password':\r\n        setPasswordDirty(true);\r\n        e.target.value < 1 && setPasswordFocus(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <form className='form' onSubmit={(e) => handleSubmit(e)}>\r\n      <div className='input-wrapper'>\r\n        <label\r\n          htmlFor='email'\r\n          className={`${\r\n            emailFocus ? 'input-label input-active' : 'input-label'\r\n          }`}\r\n        >\r\n          Введите email\r\n        </label>\r\n        <input\r\n          className='form-input'\r\n          id='email'\r\n          name='email'\r\n          type='text'\r\n          value={email}\r\n          onChange={(e) => emailHandler(e)}\r\n          onBlur={(e) => blurHandler(e)}\r\n          onFocus={() => setEmailFocus(true)}\r\n        />\r\n      </div>\r\n      <div className='input-error-message'>\r\n        {emailError && emailDirty ? <p>{emailError}</p> : null}\r\n      </div>\r\n      <div className='input-wrapper'>\r\n        <label\r\n          htmlFor='password'\r\n          className={`${\r\n            passwordFocus ? 'input-label input-active' : 'input-label'\r\n          }`}\r\n        >\r\n          Введите пароль\r\n        </label>\r\n        <span className='password-icon' onClick={toggleShowPassword}>\r\n          {showPassword ? <FaEye /> : <FaEyeSlash />}\r\n        </span>\r\n        <input\r\n          className='form-input'\r\n          type={showPassword ? 'text' : 'password'}\r\n          id='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={(e) => passwordHandler(e)}\r\n          onBlur={(e) => blurHandler(e)}\r\n          onFocus={() => setPasswordFocus(true)}\r\n        />\r\n      </div>\r\n      <div className='input-error-message'>\r\n        {passwordError && passwordDirty ? <p>{passwordError}</p> : null}\r\n      </div>\r\n\r\n      <label htmlFor='rememberUser' className='checkbox-label'>\r\n        <input\r\n          type='checkbox'\r\n          id='rememberUser'\r\n          name='rememberUser'\r\n          checked={remember}\r\n          onChange={() => setRemember(!remember)}\r\n          className='form-checkbox'\r\n        />\r\n        <div className='custom-form-checkbox'>\r\n          {remember && <FaCheck className='form-check-mark' />}\r\n        </div>\r\n        <span>Запомнить меня</span>\r\n      </label>\r\n\r\n      <button\r\n        className={`${\r\n          formValid ? 'form-button' : 'form-button form-button-dasabled'\r\n        }`}\r\n        onClick={() => formAction(email, password, remember)}\r\n        disabled={!formValid}\r\n      >\r\n        {text}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nfunction FormError({ errorText, setIsError }) {\r\n  return (\r\n    <div className='form-container error'>\r\n      <h2>Ошибка</h2>\r\n      <p>{errorText}</p>\r\n      <button className='error-button' onClick={() => setIsError(false)}>\r\n        OK\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormError;\r\n","import React, { useState } from 'react';\r\nimport { auth } from '../../Firebase/firebase';\r\nimport firebase from 'firebase/app';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport Form from './Form';\r\nimport FormError from './FormError';\r\n\r\nfunction SignInForm() {\r\n  const history = useHistory();\r\n  const [isError, setIsError] = useState(false);\r\n  const [errorText, setErrorText] = useState('');\r\n\r\n  const signIn = async (email, password, remember) => {\r\n    try {\r\n      if (!remember) {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n      }\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      await history.push('#/');\r\n    } catch (err) {\r\n      switch (err.code) {\r\n        case 'auth/user-not-found':\r\n          setIsError(true);\r\n          setErrorText('Пользователь с таким email не существует');\r\n          console.log(err);\r\n          break;\r\n        case 'auth/wrong-password':\r\n          setIsError(true);\r\n          setErrorText('Введен неверный пароль');\r\n          console.log(err);\r\n          break;\r\n        default:\r\n          console.log(err);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isError) {\r\n    return <FormError errorText={errorText} setIsError={setIsError} />;\r\n  }\r\n\r\n  return (\r\n    <div className='form-container'>\r\n      <h2 className='form-title'>Авторизация</h2>\r\n      <Form text={'войти'} formAction={signIn} />\r\n      <Link to='#/registration' className='form-link'>\r\n        Зарегистрироваться\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInForm;\r\n","import React from 'react';\r\nimport SignInForm from '../../components/Forms/SignInForm';\r\n\r\nfunction Authorization() {\r\n  return <SignInForm />;\r\n}\r\n\r\nexport default Authorization;\r\n","import React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../Firebase/firebase';\r\nimport Form from './Form';\r\nimport FormError from './FormError';\r\n\r\nfunction RegistrationForm() {\r\n  const history = useHistory();\r\n  const [isError, setIsError] = useState(false);\r\n  const [errorText, setErrorText] = useState('');\r\n\r\n  const registration = async (email, password, remember) => {\r\n    try {\r\n      if (!remember) {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n      }\r\n      await auth.createUserWithEmailAndPassword(email, password);\r\n      await history.push('#/');\r\n    } catch (err) {\r\n      switch (err.code) {\r\n        case 'auth/email-already-in-use':\r\n          setIsError(true);\r\n          setErrorText('Пользователь с таким email уже существует');\r\n          console.log(err);\r\n          break;\r\n        case 'auth/invalid-email':\r\n          setIsError(true);\r\n          setErrorText('Введен некорректный email');\r\n          console.log(err);\r\n          break;\r\n        case 'auth/weak-password':\r\n          setIsError(true);\r\n          setErrorText('Введен некорректный пароль');\r\n          console.log(err);\r\n          break;\r\n        default:\r\n          console.log(err);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isError) {\r\n    return <FormError errorText={errorText} setIsError={setIsError} />;\r\n  }\r\n\r\n  return (\r\n    <section className='from-wrapper'>\r\n      <div className='form-container'>\r\n        <h2 className='form-title'>Регистрация</h2>\r\n        <Form text={'Зарегистрироваться'} formAction={registration} />\r\n        <Link to='#/auth' className='form-link'>\r\n          Авторизация\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport RegistrationForm from '../../components/Forms/RegistrationForm';\r\n\r\nfunction Registration() {\r\n  return <RegistrationForm />;\r\n}\r\n\r\nexport default Registration;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Error404({ errorText }) {\r\n  return (\r\n    <div className='error-page'>\r\n      <h2>{errorText}</h2>\r\n      <Link className='error-link' to='#/'>\r\n        На главную страницу\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport Error from '../../components/Error/Error';\r\n\r\nfunction Error404() {\r\n  return <Error errorText={'Страница не найдена'} />;\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport Error from '../../components/Error/Error';\r\n\r\nfunction errorPage() {\r\n  return <Error errorText={'Что-то пошло не так...'} />;\r\n}\r\n\r\nexport default errorPage;\r\n","import Navbar from './components/Navbar/Navbar';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport TaskModal from './components/Modal/TaskModal';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Authorization from './pages/Authorization/Authorization';\r\nimport Registration from './pages/Authorization/Registration';\r\nimport Error404 from './pages/Error404/Error404';\r\nimport ErrorPage from './pages/ErrorPage/ErrorPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='#/auth'>\r\n            <Authorization />\r\n          </Route>\r\n          <Route path='#/registration'>\r\n            <Registration />\r\n          </Route>\r\n          <Route exact path='#/'>\r\n            <TaskModal />\r\n            <Navbar />\r\n            <MainPage />\r\n          </Route>\r\n          <Route path='#/error'>\r\n            <ErrorPage />\r\n          </Route>\r\n          <Route path='*'>\r\n            <Error404 />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  SET_SELECTED_DATE,\r\n  SET_NEXT_DATE,\r\n  SET_PREV_DATE,\r\n  SET_CURRENT_DATE,\r\n} from '../constants/constants';\r\n\r\nconst defaultState = {\r\n  selectedDate: new Date(),\r\n};\r\n\r\nexport const dateReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SET_SELECTED_DATE:\r\n      return { ...state, selectedDate: action.payload };\r\n\r\n    case SET_PREV_DATE:\r\n      const prevDate = state.selectedDate.setDate(\r\n        state.selectedDate.getDate() - 1\r\n      );\r\n      return {\r\n        ...state,\r\n        selectedDate: new Date(prevDate),\r\n      };\r\n\r\n    case SET_NEXT_DATE:\r\n      const nextDate = state.selectedDate.setDate(\r\n        state.selectedDate.getDate() + 1\r\n      );\r\n      return {\r\n        ...state,\r\n        selectedDate: new Date(nextDate),\r\n      };\r\n\r\n    case SET_CURRENT_DATE:\r\n      return {\r\n        ...state,\r\n        selectedDate: new Date(),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TASKS,\r\n  EDIT_TASK,\r\n  OPEN_MODAL,\r\n  CLOSE_MODAL,\r\n  ADD_TASK,\r\n  SAVE_EDITED_TASK,\r\n  GET_USER_ID,\r\n} from '../constants/constants';\r\n\r\nconst defaultState = {\r\n  userId: null,\r\n  tasks: null,\r\n  isCreateTaskOpen: false,\r\n  isEdit: false,\r\n  editingTask: {},\r\n};\r\n\r\nexport const tasksReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_ID:\r\n      return { ...state, userId: action.payload };\r\n\r\n    case GET_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n      };\r\n\r\n    case ADD_TASK:\r\n      return {\r\n        ...state,\r\n        isCreateTaskOpen: false,\r\n      };\r\n\r\n    case SAVE_EDITED_TASK:\r\n      return {\r\n        ...state,\r\n        isEdit: false,\r\n        isCreateTaskOpen: false,\r\n      };\r\n\r\n    case EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        isEdit: true,\r\n        isCreateTaskOpen: true,\r\n        editingTask: state.tasks.find(\r\n          (item) => String(item.id) === String(action.payload)\r\n        ),\r\n      };\r\n\r\n    case OPEN_MODAL:\r\n      return { ...state, isCreateTaskOpen: true };\r\n\r\n    case CLOSE_MODAL:\r\n      return { ...state, isCreateTaskOpen: false, isEdit: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_CALENDAR_DAYS,\r\n  GET_PREV_MONTH,\r\n  GET_NEXT_MONTH,\r\n  SET_CALENDAR_DATE,\r\n  TOGGLE_CALENDAR_SHOW,\r\n} from '../constants/constants';\r\n\r\nconst defaultState = {\r\n  calendarDate: new Date(),\r\n  calendarDays: [],\r\n  isLoading: true,\r\n  // only for small screen:\r\n  showCalendar: false,\r\n};\r\n\r\nexport const calendarReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GET_CALENDAR_DAYS:\r\n      return { ...state, calendarDays: action.payload, isLoading: false };\r\n\r\n    case SET_CALENDAR_DATE:\r\n      return { ...state, calendarDate: action.payload };\r\n\r\n    case GET_PREV_MONTH:\r\n      const prevMonthDate = state.calendarDate.setMonth(\r\n        state.calendarDate.getMonth() - 1\r\n      );\r\n      return {\r\n        ...state,\r\n        calendarDate: new Date(prevMonthDate),\r\n      };\r\n\r\n    case GET_NEXT_MONTH:\r\n      const nextMonthDate = state.calendarDate.setMonth(\r\n        state.calendarDate.getMonth() + 1\r\n      );\r\n      return {\r\n        ...state,\r\n        calendarDate: new Date(nextMonthDate),\r\n      };\r\n\r\n    case TOGGLE_CALENDAR_SHOW:\r\n      return { ...state, showCalendar: !state.showCalendar };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { dateReducer } from '../reducers/dateReducer';\r\nimport { tasksReducer } from '../reducers/tasksReducer';\r\nimport { calendarReducer } from '../reducers/calendarReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst rootReducer = combineReducers({\r\n  dateReducer,\r\n  tasksReducer,\r\n  calendarReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware())\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styles/index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}